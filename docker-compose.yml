services:

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - linkedin-network
    environment:
      #KRaft settings
      KAFKA_NODE_ID: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Modified listeners configuration
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  kafbat-ui:
    image: ghcr.io/kafbat/kafka-ui
    container_name: kafbat-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    networks:
      - linkedin-network
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: linkedin-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092

# ---------------------------------------------------------------------- #

  discovery-server:
    image: ambraj/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - linkedin-network

  api-gateway:
    image: ambraj/api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery-server
    networks:
      - linkedin-network

# ---------------------------------------------------------------------- #

  users-db:
    image: postgres:latest
    container_name: users-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users-db
    volumes:
      - users-db-data:/var/lib/postgresql
    networks:
      - linkedin-network

  users-service:
    image: ambraj/users-service
    container_name: users-service
    ports:
      - "9010:8080"
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=users-db
    depends_on:
      - discovery-server
      - users-db
    networks:
      - linkedin-network

# ---------------------------------------------------------------------- #

  posts-db:
    image: postgres:latest
    container_name: posts-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=posts-db
    volumes:
      - posts-db-data:/var/lib/postgresql
    networks:
      - linkedin-network

  posts-service:
    image: ambraj/posts-service
    container_name: posts-service
    ports:
      - "9020:8080"
    environment:
      - DB_SERVICE=posts-db
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=posts-db
    depends_on:
      - posts-db
      - discovery-server
      - kafka
    networks:
      - linkedin-network

# ---------------------------------------------------------------------- #

  connections-db:
    image: neo4j:latest
    container_name: connections-db
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - connections-db-data:/data
    networks:
      - linkedin-network

  connections-service:
    image: ambraj/connections-service
    container_name: connections-service
    ports:
      - "9030:8080"
    environment:
      - SPRING_DATASOURCE_URL=bolt://connections-db:7687
      - SPRING_DATASOURCE_USERNAME=neo4j
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_URI=http://discovery-server:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - connections-db
      - discovery-server
      - kafka
    networks:
      - linkedin-network

# ---------------------------------------------------------------------- #

  notification-db:
    image: postgres:latest
    container_name: notification-db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=notification-db
    volumes:
      - notification-db-data:/var/lib/postgresql
    networks:
      - linkedin-network

  notification-service:
    image: ambraj/notification-service
    container_name: notification-service
    ports:
      - "9040:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://notification-db:5432/notification-db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_URI=http://discovery-server:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - notification-db
      - discovery-server
      - kafka
    networks:
      - linkedin-network

volumes:
  posts-db-data:
  users-db-data:
  connections-db-data:
  notification-db-data:
  kafka-data:

networks:
  linkedin-network: